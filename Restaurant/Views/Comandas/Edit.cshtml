@model ComandaEditViewModel

@{
    ViewData["Title"] = "Editar Comanda";
    var platos = ViewBag.Platos as SelectList;
}

<h1>@ViewData["Title"]</h1>

<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="Id" />

    <div class="form-group">
        <label>Mesa</label>
        <select asp-for="MesaId" class="form-control" asp-items="ViewBag.MesaId" data-voice="Seleccionar mesa">
            <option value="">-- Seleccionar Mesa --</option>
        </select>
    </div>

    <div class="form-group">
        <label>Tipo Consumo</label>
        <select asp-for="TipoConsumoId" class="form-control" asp-items="ViewBag.TipoConsumoId" data-voice="Seleccionar tipo de consumo">
            <option value="">-- Seleccionar Tipo Consumo --</option>
        </select>
    </div>

    <hr />
    <h4>Editar Platos</h4>

    <div id="detallesContainer">
        @for (int i = 0; i < Model.Detalles.Count; i++)
        {
            <div class="detalle-item mb-3">
                <div class="row">
                    <div class="col-md-4">
                        <select name="Detalles[@i].PlatoId" class="form-control" onchange="actualizarPrecio(this)" data-voice="Seleccionar plato" >
                            <option value="">-- Seleccionar Plato --</option>
                            @foreach (var plato in ViewBag.Platos as SelectList)
                            {
                                var partes = plato.Text.Split('|');
                                var nombre = partes[0];
                                var precio = partes.Length > 1 ? partes[1] : "0";

                                var seleccionado = Model.Detalles[i].PlatoId.ToString() == plato.Value;

                                <option value="@plato.Value" data-precio="@precio" selected="@(seleccionado ? "selected" : null)">
                                    @nombre
                                </option>
                            }
                    </div>
                    <div class="col-md-2">
                        <input type="text" class="form-control precio" placeholder="Precio" value="@Model.Detalles[i].Precio" readonly />
                    </div>
                    <div class="col-md-2">
                        <input type="number" name="Detalles[@i].Cantidad" class="form-control cantidad" placeholder="Cantidad" value="@Model.Detalles[i].Cantidad" min="1" oninput="actualizarSubtotal(this)" />
                    </div>
                    <div class="col-md-2">
                        <input type="text" class="form-control subtotal" placeholder="Subtotal" value="@(Model.Detalles[i].Precio * Model.Detalles[i].Cantidad)" readonly />
                    </div>
                    <div class="col-md-2">
                        <button type="button" class="btn btn-danger" onclick="eliminarDetalle(this)" data-voice="Eliminar plato">Eliminar</button>
                    </div>
                </div>
            </div>
        }
    </div>

    <button type="button" class="btn btn-primary" onclick="agregarDetalle()" data-voice="Agregar plato">Agregar Plato</button>

    <hr />
    <button type="submit" class="btn btn-success" data-voice="Guardar cambios">Guardar Cambios</button>
    <a asp-action="Index" class="btn btn-secondary" data-voice="Cancelar">Cancelar</a>
</form>

@section Scripts {
    <script>
        var platosPrecios = {
            @foreach (var plato in platos)
            {
                var partes = plato.Text.Split('|');
                var precio = partes.Length > 1 ? partes[1] : "0";
                <text>@plato.Value: @precio,</text>
            }
        };

        function agregarDetalle() {
            var index = document.querySelectorAll('#detallesContainer .detalle-item').length;

            var detalleHtml = `
                <div class="detalle-item mb-3">
                    <div class="row">
                        <div class="col-md-4">
                            <select name="Detalles[${index}].PlatoId" class="form-control" onchange="actualizarPrecio(this)">
                                <option value="">-- Seleccionar Plato --</option>
                                @foreach (var plato in platos)
                                {
                                    var nombre = plato.Text.Split('|')[0];
                                    <text><option value="@plato.Value">@nombre</option></text>
                                }
                            </select>
                        </div>
                        <div class="col-md-2">
                            <input type="text" class="form-control precio" placeholder="Precio" readonly />
                        </div>
                        <div class="col-md-2">
                            <input type="number" name="Detalles[${index}].Cantidad" class="form-control cantidad" placeholder="Cantidad" value="1" min="1" oninput="actualizarSubtotal(this)" />
                        </div>
                        <div class="col-md-2">
                            <input type="text" class="form-control subtotal" placeholder="Subtotal" readonly />
                        </div>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-danger" onclick="eliminarDetalle(this)">Eliminar</button>
                        </div>
                    </div>
                </div>
            `;

            document.getElementById('detallesContainer').insertAdjacentHTML('beforeend', detalleHtml);
        }

        function eliminarDetalle(boton) {
            boton.closest('.detalle-item').remove();
        }

        function actualizarPrecio(select) {
            var selectedValue = select.value;
            var container = select.closest('.detalle-item');
            var precioInput = container.querySelector('.precio');
            var cantidadInput = container.querySelector('.cantidad');
            var subtotalInput = container.querySelector('.subtotal');

            var precio = platosPrecios[selectedValue] || 0;
            precioInput.value = parseFloat(precio).toFixed(2);

            var cantidad = parseInt(cantidadInput.value) || 0;
            subtotalInput.value = (precio * cantidad).toFixed(2);
        }

        function actualizarSubtotal(cantidadInput) {
            var container = cantidadInput.closest('.detalle-item');
            var precioInput = container.querySelector('.precio');
            var subtotalInput = container.querySelector('.subtotal');

            var precio = parseFloat(precioInput.value) || 0;
            var cantidad = parseInt(cantidadInput.value) || 0;

            subtotalInput.value = (precio * cantidad).toFixed(2);
        }
    </script>
}
